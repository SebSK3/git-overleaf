image: python:3.12

variables:
    PYTHONUNBUFFERED: "1"

before_script:
  - pip install tox

stages: [precheck, test, deploy]

prechecks:
  tags: [ci.inria.fr, small]
  stage: precheck
  script:
  - pip install pre-commit
  - pre-commit run --all-files

pep8:
  tags: [ci.inria.fr, small]
  stage: test
  script:
  - tox -e pep8

docs:
  tags: [ci.inria.fr, small]
  stage: test
  script:
  - tox -e docs


#######################################################################################
#
# Functionnal tests:
#   - We boot a fresh instance of sharelatex and run test against it
#   - Test locally:
#     gitlab-runner exec docker \
#      --docker-volumes /var/run/docker.sock:/var/run/docker.sock \
#      functionnal
#
#######################################################################################
py39-functional: &base-functional
  tags: [ci.inria.fr, large]
  stage: test
  image: python:3.9
  variables:
    TOXENV: py39
    SHARELATEX_IMAGE_VERSION: 3.0.1
    AUTH_TYPE: community
    JPEG_FILE_NAME: universe.jpg
    TEX_FILE_NAME: main.tex
    BIB_FILE_NAME: references.bib
    DOCKER_ENV_FILE: env_sharelatex
  script:
  # Install docker programs (docker-cli, docker-compose)
  - env
  - apt update
  - apt-get install -y ca-certificates curl
  - install -m 0755 -d /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
  - chmod a+r /etc/apt/keyrings/docker.asc
  - echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian  bookworm stable" > /etc/apt/sources.list.d/docker.list
  - apt update
  - apt install -y docker-ce-cli  docker-compose-plugin  #  Install sharelatex
  - cd sharelatex/tests
  - export CI_SHARELATEX_IMAGE_VERSION="${SHARELATEX_IMAGE_VERSION}"
  - export CI_DOCKER_ENV_FILE="${DOCKER_ENV_FILE}"
  - docker compose up -d
  # Prepare the the functionnal tests
  # -create an user
  # -export the env variables needed by the tests
  - docker cp create-user-with-pass.js  sharelatex:/var/www/sharelatex/web/modules/server-ce-scripts/scripts
  # user creation isn't idempotent
  - docker exec --workdir /var/www/sharelatex/web/modules/server-ce-scripts/scripts -i sharelatex node create-user-with-pass.js --email=joe1@inria.fr --pass=TestTest42
  - docker exec --workdir /var/www/sharelatex/web/modules/server-ce-scripts/scripts -i sharelatex node create-user-with-pass.js --email=joe2@inria.fr --pass=TestTest42
  - docker exec --workdir /var/www/sharelatex/web/modules/server-ce-scripts/scripts -i sharelatex node create-user-with-pass.js --email=joe3@inria.fr --pass=TestTest42
  - export CI_BASE_URL=http://172.17.0.1:8080
  - export CI_USERNAMES=joe1@inria.fr,joe2@inria.fr,joe3@inria.fr
  - export CI_PASSWORDS=TestTest42,TestTest42,TestTest42
  - export CI_AUTH_TYPE="${AUTH_TYPE}"
  - export CI_JPEG_FILE_NAME="${JPEG_FILE_NAME}"
  - export CI_TEX_FILE_NAME="${TEX_FILE_NAME}"
  - export CI_BIB_FILE_NAME="${BIB_FILE_NAME}"
  # let's test !
  # the python interpreter version is taken from the TOXENV var
  - tox

# py39-ov5.2.1-functional:
#   <<: *base-functional
#   stage: test
#   variables:
#     SHARELATEX_IMAGE_VERSION: 5.2.1
#     AUTH_TYPE: overleaf_community
#     JPEG_FILE_NAME: frog.jpg
#     TEX_FILE_NAME: main.tex
#     BIB_FILE_NAME: sample.bib
#     DOCKER_ENV_FILE: env_overleaf
#   allow_failure: true

py310-functional:
  <<: *base-functional
  stage: test
  image: python:3.10
  variables:
    TOXENV: py310
  allow_failure: true

py311-functional:
  <<: *base-functional
  stage: test
  image: python:3.11
  variables:
    TOXENV: py311
  allow_failure: true

py312-functional:
  <<: *base-functional
  stage: test
  image: python:3.12
  variables:
    TOXENV: py312
  allow_failure: true
########################################################################################
#
# Release zone:
#   - Create the wheel
#   - push it on pypi
#   - build and publish the doc
#
##########################################################################################
pages:
    stage: deploy
    tags: [ci.inria.fr, small]
    only:
    - tags
    script:
    - tox -e docs
    - mkdir -p public/
    - cp -r docs/_build/html/* public/
    artifacts:
      paths:
      - public

pypi:
    stage: deploy
    tags: [ci.inria.fr, small]
    only:
    - tags
    script:
    - python setup.py bdist_wheel
    - pip install twine
    # credentials are set in the env by gitlab
    - twine upload dist/* --verbose
